#!/bin/bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
sudo apt update && sudo apt install -y python3 python3-venv python3-pip curl screen git gnupg

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yarn (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–±)
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/yarn.gpg >/dev/null
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update && sudo apt install -y yarn

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node
curl -sSL https://raw.githubusercontent.com/zunxbt/installation/main/node.sh | bash

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
export PATH="$HOME/.local/bin:$PATH"
source ~/.bashrc 2>/dev/null || true

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö npm –ø–∞–∫–µ—Ç–æ–≤ (–ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node)
sudo npm install -g yarn
sudo npm install -g n
sudo npm install encoding pino-pretty

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ LTS –≤–µ—Ä—Å–∏–∏ Node –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏
sudo n lts
n 20.18.0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–±–∏–π—Å—Ç–≤–æ —Å—Ç–∞—Ä—ã—Ö screen-—Å–µ—Å—Å–∏–π
screen -ls | grep "\.gensyn" | cut -d. -f1 | awk '{print $1}' | xargs -r kill

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã, —Å–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç 3000 (node –∏ —Ç—É–Ω–Ω–µ–ª—å)
lsof -ti:3000 | xargs kill -9 2>/dev/null || true

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
RECLONE="${1:-n}"                 # –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'n')

# –†–∞–±–æ—Ç–∞ —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º RL Swarm
if [ "$RECLONE" == "y" ]; then
    echo "üì• –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –∏ –∫–ª–æ–Ω–∏—Ä—É—é –∑–∞–Ω–æ–≤–æ..."
    rm -rf rl-swarm
    git clone https://github.com/odovich-dev/rl-swarm.git
    cd rl-swarm
else
    if [ ! -d "rl-swarm" ]; then
        echo "üì• –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∫–ª–æ–Ω–∏—Ä—É—é..."
        git clone https://github.com/odovich-dev/rl-swarm.git
    fi
    cd rl-swarm
    echo "üîÑ –û–±–Ω–æ–≤–ª—è—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–µ—Ä–µ–∑ git pull..."
    git pull
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ö–∏–≤–∞ –≤–∏–¥–∞ —á–∏—Å–ª–æ.tar –≤ /root
ARCHIVE_FOUND=$(find /root -maxdepth 1 -type f -name '[0-9]*.tar' | head -n 1)
if [ -n "$ARCHIVE_FOUND" ]; then
    echo "üì¶ –ù–∞–π–¥–µ–Ω –∞—Ä—Ö–∏–≤ $ARCHIVE_FOUND. –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é..."
    tar -xvf "$ARCHIVE_FOUND" -C /root
    echo "‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ temp-data
    if [ -d "/root/rl-swarm/modal-login/temp-data/" ]; then
        echo "üóëÔ∏è  –£–¥–∞–ª—è—é —Ñ–∞–π–ª—ã –∏–∑ /root/rl-swarm/modal-login/temp-data/..."
        rm -rf /root/rl-swarm/modal-login/temp-data/*
        echo "‚úÖ –§–∞–π–ª—ã –∏–∑ temp-data —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!"
    else
        echo "‚ÑπÔ∏è  –ü–∞–ø–∫–∞ /root/rl-swarm/modal-login/temp-data/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    fi
else
    echo "‚ÑπÔ∏è  –ê—Ä—Ö–∏–≤–æ–≤ –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
fi

# –ó–∞–ø—É—Å–∫ –≤ screen
screen -dmS gensyn bash -c 'cd ~/rl-swarm && if [ ! -d ".venv" ]; then python3 -m venv .venv; fi && source .venv/bin/activate && pip install --upgrade pip && pip install accelerate==1.7 && trap "" SIGINT && ./run_rl_swarm.sh; exec bash -i' &
disown
